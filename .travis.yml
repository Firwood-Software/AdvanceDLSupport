language: csharp
solution: AdvanceDLSupport.sln
os:
  - linux
  - osx
addons:
  apt:
    packages:
      - gcc-multilib
mono: latest
dotnet: 2.1.3
before_install:
  - git config --global url."https://github.com/".insteadOf "git@github.com:"
install:
  - dotnet restore
script:
  - msbuild /p:Configuration=Debug AdvanceDLSupport.sln
  # Since altcover doesn't pass through return values, run the tests normally first
  - dotnet test --no-build AdvancedDLSupport.Tests
  - dotnet test --no-build Mono.DllMap.Tests
  # Then run coverage
  - nuget install altcover -OutputDirectory altcover -Version 1.6.230
  - dotnet run --project altcover/altcover.1.6.230/tools/netcoreapp2.0/AltCover/altcover.core.fsproj --configuration Debug -- -i=AdvancedDLSupport.Tests/bin/Debug/netcoreapp2.0 -o=instrumented-adl -x=coverage-adl.xml --assemblyExcludeFilter=.+\.Tests --assemblyExcludeFilter=AltCover.+ --assemblyExcludeFilter=Mono\.DllMap.+
  - dotnet run --project altcover/altcover.1.6.230/tools/netcoreapp2.0/AltCover/altcover.core.fsproj --configuration Debug -- -i=Mono.DllMap.Tests/bin/Debug/netcoreapp2.0 -o=instrumented-mdl -x=coverage-mdl.xml --assemblyExcludeFilter=.+\.Tests --assemblyExcludeFilter=AltCover.+
  - cp instrumented-adl/* AdvancedDLSupport.Tests/bin/Debug/netcoreapp2.0
  - cp instrumented-mdl/* Mono.DllMap.Tests/bin/Debug/netcoreapp2.0
  - dotnet run --project altcover/altcover.1.6.230/tools/netcoreapp2.0/AltCover/altcover.core.fsproj --no-build -- runner -x "dotnet" -r "AdvancedDLSupport.Tests/bin/Debug/netcoreapp2.0" -- test AdvancedDLSupport.Tests --no-build
  - dotnet run --project altcover/altcover.1.6.230/tools/netcoreapp2.0/AltCover/altcover.core.fsproj --no-build -- runner -x "dotnet" -r "Mono.DllMap.Tests/bin/Debug/netcoreapp2.0" -- test Mono.DllMap.Tests --no-build
after_success:
  - bash <(curl -s https://codecov.io/bash)
